version: "2.2"

services:
  # ELK
  elasticsearch:
    image: elasticsearch:5.3.0
    ports:
      - ${ES_SERVER_PORT}:${ES_SERVER_PORT}
    networks:
      - xproject
    env_file:
      - bootstrap.env
    environment:
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
    healthcheck:
      test: curl -f http://localhost:${ES_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  kibana:
    image: kibana:5.3.0
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - ${KIBANA_SERVER_PORT}:${KIBANA_SERVER_PORT}
    networks:
      - xproject
    env_file:
      - bootstrap.env
    environment:
      - xpack.security.enabled=false
    healthcheck:
      test: curl -f http://localhost:${KIBANA_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  logstash:
    image: docker.elastic.co/logstash/logstash:5.2.2
    depends_on:
      kibana:
        condition: service_healthy
    command: logstash -f /elk-config/logstash.config
    ports:
      - ${LOGSTASH_SERVER_PORT}:${LOGSTASH_SERVER_PORT}
      - ${LOGSTASH_UDP_SERVER_PORT}:${LOGSTASH_UDP_SERVER_PORT}
    networks:
      - xproject
    volumes:
      - $PWD/config/elk-config:/elk-config
    env_file:
      - bootstrap.env
    environment:
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: curl -f http://localhost:${LOGSTASH_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  # Rabbit
  rabbit-server:
    image: rabbitmq:3-management-alpine
    hostname: ${RABBITMQ_SERVER}
    ports:
      - ${RABBITMQ_MGNT_PORT}:${RABBITMQ_MGNT_PORT}
    networks:
      - xproject
    volumes:
      - "data-rabbit:/var/lib/rabbitmq"
    env_file:
      - bootstrap.env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    healthcheck:
      test: nc -v -w 5 -z localhost ${RABBITMQ_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  # Redis
  redis-server:
    image: redis:3-alpine
    ports:
      - ${REDIS_SERVER_PORT}:${REDIS_SERVER_PORT}
    networks:
      - xproject
    env_file:
      - bootstrap.env
    healthcheck:
      test: nc -v -w 5 -z localhost ${REDIS_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  zipkin-mysql:
    image: mysql:5.6
#    ports:
#      - ${ZIPKIN_MYSQL_PORT}:${ZIPKIN_MYSQL_PORT}
    networks:
      - xproject
    volumes:
      - "data-zipkin-mysql:/var/lib/mysql"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${ZIPKIN_MYSQL_USER}
      - MYSQL_PASSWORD=${ZIPKIN_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${ZIPLIN_MYSQL_DB}
    healthcheck:
      test: mysqladmin ping -u${ZIPKIN_MYSQL_USER} -p${ZIPKIN_MYSQL_PASSWORD}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  auth-mysql:
    image: mysql:5.6
    ports:
      - ${AUTH_MYSQL_PORT}:${AUTH_MYSQL_PORT}
    networks:
      - xproject
    volumes:
      - "data-auth-mysql:/var/lib/mysql"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${AUTH_MYSQL_USER}
      - MYSQL_PASSWORD=${AUTH_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${AUTH_MYSQL_DB}
    healthcheck:
      test: mysqladmin ping -u${AUTH_MYSQL_USER} -p${AUTH_MYSQL_PASSWORD}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  config-server:
    image: xproject/support/config-server:${PROJECT_VERSION}
    depends_on:
      logstash:
        condition: service_healthy
    ports:
      - ${CONFIG_SERVER_PORT}:${CONFIG_SERVER_PORT}
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=default,native,docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost ${CONFIG_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10
      
  eureka01:
    image: xproject/support/eureka-server:${PROJECT_VERSION}
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - ${SERVER_PORT_EUREKA01}:${SERVER_PORT_EUREKA01}
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=eureka01,eureka01-docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost ${SERVER_PORT_EUREKA01}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10
      

  eureka02:
    image: xproject/support/eureka-server:${PROJECT_VERSION}
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - ${SERVER_PORT_EUREKA02}:${SERVER_PORT_EUREKA02}
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=eureka02,eureka02-docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost ${SERVER_PORT_EUREKA02}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10
      
  zipkin-server:
    image: xproject/support/zipkin-server:${PROJECT_VERSION}
    depends_on:
      eureka01:
        condition: service_healthy
      eureka02:
        condition: service_healthy
      rabbit-server:
        condition: service_healthy
      redis-server:
        condition: service_healthy
      zipkin-mysql:
        condition: service_healthy
      auth-mysql:
        condition: service_healthy
    ports:
      - ${ZIPKIN_SERVER_PORT}:${ZIPKIN_SERVER_PORT}
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost ${ZIPKIN_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  auth-server:
    image: xproject/support/auth-server:${PROJECT_VERSION}
    depends_on:
      zipkin-server:
        condition: service_healthy
    ports:
      - ${AUTH_SERVER_PORT}:${AUTH_SERVER_PORT}
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost ${AUTH_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10


  zuul-server:
    image: xproject/support/zuul-server:${PROJECT_VERSION}
    depends_on:
      zipkin-server:
        condition: service_healthy
      auth-server:
        condition: service_healthy
    extra_hosts:
      - "${DOMAIN_NAME}:${AUTH_SERVER_HOST}"
    ports:
      - ${ZUUL_SERVER_PORT}:${ZUUL_SERVER_PORT}
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS_CLIENT_STORE} 
    healthcheck:
      test: nc -v -w 5 -z localhost ${ZUUL_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10
      

  turbine-server:
    image: xproject/support/turbine-server:${PROJECT_VERSION}
    depends_on:
      zipkin-server:
        condition: service_healthy
    ports:
      - ${TURBINE_SERVER_PORT}:${TURBINE_SERVER_PORT}
      - ${TURBINE_SERVER_MANAGEMENT_PORT}:${TURBINE_SERVER_MANAGEMENT_PORT}
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost ${TURBINE_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10
      

  hystrix-dashboard:
    image: xproject/support/hystrix-dashboard:${PROJECT_VERSION}
    depends_on:
      turbine-server:
        condition: service_healthy
    ports:
      - ${HYSTRIX_DASHBOARD_SERVER_PORT}:${HYSTRIX_DASHBOARD_SERVER_PORT}
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost ${HYSTRIX_DASHBOARD_SERVER_PORT}
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10
      

  product-service:
    image: xproject/core/product-service:${PROJECT_VERSION}
    depends_on:
      zipkin-server:
        condition: service_healthy
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost 8080
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  review-service:
    image: xproject/core/review-service:${PROJECT_VERSION}
    depends_on:
      zipkin-server:
        condition: service_healthy
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost 8080
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  product-composite-service:
    image: xproject/composite/product-composite-service:${PROJECT_VERSION}
    depends_on:
      zipkin-server:
        condition: service_healthy
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    healthcheck:
      test: nc -v -w 5 -z localhost 8080
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

  product-api-service:
    image: xproject/api/product-api-service:${PROJECT_VERSION}
    depends_on:
      auth-server:
        condition: service_healthy
    extra_hosts:
      - "${DOMAIN_NAME}:${AUTH_SERVER_HOST}"
    networks:
      - xproject
    volumes:
      - "data-logs:/tmp/logs/"
    env_file:
      - bootstrap.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS_CLIENT_STORE} 
    healthcheck:
      test: nc -v -w 5 -z localhost 8080
      interval: ${INTERVAL}
      timeout: ${TIMEOUT}
      retries: 10

networks:
  xproject:
volumes:
  data-rabbit:
  data-zipkin-mysql:
  data-auth-mysql:
  data-logs:

#######################Useful Reference#########################
#https://docs.docker.com/compose/compose-file/compose-file-v2/
#volumes:
#  db-data:
#extra_hosts:
#  - "somehost:162.242.195.82"
#  - "otherhost:50.31.209.229"
#logging:
#  driver: syslog
#  options:
#    syslog-address: "tcp://192.168.0.42:123"
#ulimits:
#  nproc: 65535
#  nofile:
#    soft: 20000
#    hard: 40000
#volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - db-data:/var/lib/postgresql/data
#test: ["CMD", "nc", "-v", "-w", "5", "-z", "localhost", "${CONFIG_SERVER_PORT}"]
#test: ["CMD-SHELL", "nc -v -w 5 -z localhost ${CONFIG_SERVER_PORT}"]
#restart: on-failure/none/always
############################################################



